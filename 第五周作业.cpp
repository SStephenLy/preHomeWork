#if 0
#define _CRT_SECURE_NO_WARNINGS 1
#include <iostream>
#include <Eigen/Dense>
#define N 18

using namespace Eigen;

// 定义方程组的函数
VectorXd equations(const VectorXd& X) {
    VectorXd F(N);
    F(3) = (X(4) - X(13)) / 4000 + (X(4) - X(6)) / 30000 + (1e-09) * (exp(11594.2 * (X(8) - X(1))) - 1) + (-1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1))) - 1);

    F(4) = (X(5) - X(14)) / 4000 + (X(5) - X(7)) / 30000 + (1e-09) * (exp(11594.2 * (X(9) - X(1))) - 1) + (-1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1))) - 1);

    F(5) = (X(6) - X(4)) / 30000 + (X(6)) / 10100 + (-1e-09) * (exp(11594.2 * (X(8) - X(6))) - 1) + (1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6))) - 1) + (1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6))) - 1) - (1e-09) * (exp(11594.2 * (X(10) - X(6))) - 1);

    F(7) = (X(8)) / 500 + (-1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1))) - 1) - (-1e-09) * (exp(11594.2 * (X(4) - X(1))) - 1) + (-1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6))) - 1) - (-1e-09) * (exp(11594.2 * (X(10) - X(6))) - 1);

    F(8) = (X(9)) / 500 + (-1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1))) - 1) - (-1e-09) * (exp(11594.2 * (X(5) - X(1))) - 1) + (-1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7))) - 1) - (-1e-09) * (exp(11594.2 * (X(12) - X(7))) - 1);

    F(6) = (X(7) - X(5)) / 30000 + (X(7)) / 10100 + (-1e-09) * (exp(11594.2 * (X(9) - X(7))) - 1) + (1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7))) - 1) + (1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7))) - 1) - (1e-09) * (exp(11594.2 * (X(12) - X(7))) - 1);

    F(9) = (X(10) - X(13)) / 4000 + (X(10) - X(3)) / 30000 + (1e-09) * (exp(11594.2 * (X(8) - X(6))) - 1) + (-1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6))) - 1);

    F(11) = (X(12) - X(14)) / 4000 + (X(12) - X(11)) / 30000 + (1e-09) * (exp(11594.2 * (X(9) - X(7))) - 1) + (-1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7))) - 1);

    F(12) = (X(13)) - 12;

    F(13) = (X(14)) - 12;

    F(0) = (X(1) - X(2)) - 10;

    F(10) = (X(11) - X(3)) - 2;

    F(14) = X(15) + (X(13) - X(4)) / 4000 + (X(13) - X(10)) / 4000;

    F(15) = X(16) + (X(14) - X(5)) / 4000 + (X(14) - X(12)) / 4000;

    F(16) = X(17) + (X(1)) / 5000 + (-1e-09) * (exp(11594.2 * (X(8) - X(1))) - 1) + (1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1))) - 1) + (1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1))) - 1) - (1e-09) * (exp(11594.2 * (X(4) - X(1))) - 1) + (-1e-09) * (exp(11594.2 * (X(9) - X(1))) - 1) + (1e-09 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1))) - 1) + (1e-09 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1))) - 1) - (1e-09) * (exp(11594.2 * (X(5) - X(1))) - 1);

    F(16) = (-X(17)) + (X(2) - X(3)) / 10000;

    F(17) = X(18) + (X(11) - X(12)) / 30000;

    F(17) = (-X(18)) + (X(3) - X(2)) / 10000 + (X(3) - X(10)) / 30000;
    return F;
}

// 定义方程组的雅可比矩阵
MatrixXd jacobian(const VectorXd& X) {
    MatrixXd JAC(N, N);
    JAC(3, 12) = (-1 / 4000) + 0 + 0;

    JAC(3, 14) = 0;

    JAC(3, 13) = 0 + 0 + 0;

    JAC(3, 15) = 0;

    JAC(3, 0) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(1)))) - (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1))));

    JAC(3, 16) = 0;

    JAC(3, 1) = 0 + 0 + 0;

    JAC(3, 16) = 0;

    JAC(3, 10) = 0 + 0 + 0;

    JAC(3, 17) = 0;

    JAC(3, 2) = 0 + 0 + 0;

    JAC(3, 17) = 0;

    JAC(3, 3) = 1 / 4000 + 1 / 30000 + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1))));

    JAC(3, 4) = 0 + 0 + 0;

    JAC(3, 5) = 0 + (-1 / 30000) + 0;

    JAC(3, 7) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(1))));

    JAC(3, 8) = 0 + 0 + 0;

    JAC(3, 6) = 0 + 0 + 0;

    JAC(3, 9) = 0 + 0 + 0;

    JAC(3, 11) = 0 + 0 + 0;

    JAC(4, 12) = 0 + 0 + 0;

    JAC(4, 14) = 0;

    JAC(4, 13) = (-1 / 4000) + 0 + 0;

    JAC(4, 15) = 0;

    JAC(4, 0) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(1)))) - (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1))));

    JAC(4, 16) = 0;

    JAC(4, 1) = 0 + 0 + 0;

    JAC(4, 16) = 0;

    JAC(4, 10) = 0 + 0 + 0;

    JAC(4, 17) = 0;

    JAC(4, 2) = 0 + 0 + 0;

    JAC(4, 17) = 0;

    JAC(4, 3) = 0 + 0 + 0;

    JAC(4, 4) = 1 / 4000 + 1 / 30000 + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1))));

    JAC(4, 5) = 0 + 0 + 0;

    JAC(4, 7) = 0 + 0 + 0;

    JAC(4, 8) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(1))));

    JAC(4, 6) = 0 + (-1 / 30000) + 0;

    JAC(4, 9) = 0 + 0 + 0;

    JAC(4, 11) = 0 + 0 + 0;

    JAC(5, 12) = 0 + 0 + 0;

    JAC(5, 14) = 0;

    JAC(5, 13) = 0 + 0 + 0;

    JAC(5, 15) = 0;

    JAC(5, 0) = 0 + 0 + 0;

    JAC(5, 16) = 0;

    JAC(5, 1) = 0 + 0 + 0;

    JAC(5, 16) = 0;

    JAC(5, 10) = 0 + 0 + 0;

    JAC(5, 17) = 0;

    JAC(5, 2) = 0 + 0 + 0;

    JAC(5, 17) = 0;

    JAC(5, 3) = (-1 / 30000) + 0 + 0;

    JAC(5, 4) = 0 + 0 + 0;

    JAC(5, 5) = 1 / 30000 + 1 / 10100 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(6)))) + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6)))) - (1e-09 * -11594.2) * (exp(11594.2 * (X(10) - X(6))));

    JAC(5, 7) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(6)))) - (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6))));

    JAC(5, 8) = 0 + 0 + 0;

    JAC(5, 6) = 0 + 0 + 0;

    JAC(5, 9) = 0 + 0 + (-1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(10) - X(6))));

    JAC(5, 11) = 0 + 0 + 0;

    JAC(7, 12) = 0 + 0 + 0;

    JAC(7, 14) = 0;

    JAC(7, 13) = 0 + 0 + 0;

    JAC(7, 15) = 0;

    JAC(7, 0) = 0 + (-1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(4) - X(1)))) + 0;

    JAC(7, 16) = 0;

    JAC(7, 1) = 0 + 0 + 0;

    JAC(7, 16) = 0;

    JAC(7, 10) = 0 + 0 + 0;

    JAC(7, 17) = 0;

    JAC(7, 2) = 0 + 0 + 0;

    JAC(7, 17) = 0;

    JAC(7, 3) = 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(4) - X(1)))) + 0;

    JAC(7, 4) = 0 + 0 + 0;

    JAC(7, 5) = 0 + 0 + (-1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(10) - X(6))));

    JAC(7, 7) = 1 / 500 + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(6))));

    JAC(7, 8) = 0 + 0 + 0;

    JAC(7, 6) = 0 + 0 + 0;

    JAC(7, 9) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(10) - X(6))));

    JAC(7, 11) = 0 + 0 + 0;

    JAC(8, 12) = 0 + 0 + 0;

    JAC(8, 14) = 0;

    JAC(8, 13) = 0 + 0 + 0;

    JAC(8, 15) = 0;

    JAC(8, 0) = 0 + (-1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(5) - X(1)))) + 0;

    JAC(8, 16) = 0;

    JAC(8, 1) = 0 + 0 + 0;

    JAC(8, 16) = 0;

    JAC(8, 10) = 0 + 0 + 0;

    JAC(8, 17) = 0;

    JAC(8, 2) = 0 + 0 + 0;

    JAC(8, 17) = 0;

    JAC(8, 3) = 0 + 0 + 0;

    JAC(8, 4) = 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(5) - X(1)))) + 0;

    JAC(8, 5) = 0 + 0 + 0;

    JAC(8, 7) = 0 + 0 + 0;

    JAC(8, 8) = 1 / 500 + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7))));

    JAC(8, 6) = 0 + 0 + (-1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(12) - X(7))));

    JAC(8, 9) = 0 + 0 + 0;

    JAC(8, 11) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(12) - X(7))));

    JAC(6, 12) = 0 + 0 + 0;

    JAC(6, 14) = 0;

    JAC(6, 13) = 0 + 0 + 0;

    JAC(6, 15) = 0;

    JAC(6, 0) = 0 + 0 + 0;

    JAC(6, 16) = 0;

    JAC(6, 1) = 0 + 0 + 0;

    JAC(6, 16) = 0;

    JAC(6, 10) = 0 + 0 + 0;

    JAC(6, 17) = 0;

    JAC(6, 2) = 0 + 0 + 0;

    JAC(6, 17) = 0;

    JAC(6, 3) = 0 + 0 + 0;

    JAC(6, 4) = (-1 / 30000) + 0 + 0;

    JAC(6, 5) = 0 + 0 + 0;

    JAC(6, 7) = 0 + 0 + 0;

    JAC(6, 8) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(7)))) - (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7))));

    JAC(6, 6) = 1 / 30000 + 1 / 10100 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(7)))) + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(7)))) - (1e-09 * -11594.2) * (exp(11594.2 * (X(12) - X(7))));

    JAC(6, 9) = 0 + 0 + 0;

    JAC(6, 11) = 0 + 0 + (-1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(12) - X(7))));

    JAC(9, 12) = (-1 / 4000) + 0 + 0;

    JAC(9, 14) = 0;

    JAC(9, 13) = 0 + 0 + 0;

    JAC(9, 15) = 0;

    JAC(9, 0) = 0 + 0 + 0;

    JAC(9, 16) = 0;

    JAC(9, 1) = 0 + 0 + 0;

    JAC(9, 16) = 0;

    JAC(9, 10) = 0 + 0 + 0;

    JAC(9, 17) = 0;

    JAC(9, 2) = 0 + (-1 / 30000) + 0;

    JAC(9, 17) = 0;

    JAC(9, 3) = 0 + 0 + 0;

    JAC(9, 4) = 0 + 0 + 0;

    JAC(9, 5) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(6)))) - (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6))));

    JAC(9, 7) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(6))));

    JAC(9, 8) = 0 + 0 + 0;

    JAC(9, 6) = 0 + 0 + 0;

    JAC(9, 9) = 1 / 4000 + 1 / 30000 + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(10) - X(6))));

    JAC(9, 11) = 0 + 0 + 0;

    JAC(11, 12) = 0 + 0 + 0;

    JAC(11, 14) = 0;

    JAC(11, 13) = (-1 / 4000) + 0 + 0;

    JAC(11, 15) = 0;

    JAC(11, 0) = 0 + 0 + 0;

    JAC(11, 16) = 0;

    JAC(11, 1) = 0 + 0 + 0;

    JAC(11, 16) = 0;

    JAC(11, 10) = 0 + (-1 / 30000) + 0;

    JAC(11, 17) = 0;

    JAC(11, 2) = 0 + 0 + 0;

    JAC(11, 17) = 0;

    JAC(11, 3) = 0 + 0 + 0;

    JAC(11, 4) = 0 + 0 + 0;

    JAC(11, 5) = 0 + 0 + 0;

    JAC(11, 7) = 0 + 0 + 0;

    JAC(11, 8) = 0 + 0 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(7))));

    JAC(11, 6) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(7)))) - (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7))));

    JAC(11, 9) = 0 + 0 + 0;

    JAC(11, 11) = 1 / 4000 + 1 / 30000 + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(12) - X(7))));

    JAC(12, 12) = 1;

    JAC(12, 14) = 0;

    JAC(12, 15) = 0;

    JAC(12, 16) = 0;

    JAC(12, 17) = 0;

    JAC(12, 13) = 0;

    JAC(12, 0) = 0;

    JAC(12, 1) = 0;

    JAC(12, 10) = 0;

    JAC(12, 2) = 0;

    JAC(12, 3) = 0;

    JAC(12, 4) = 0;

    JAC(12, 5) = 0;

    JAC(12, 7) = 0;

    JAC(12, 8) = 0;

    JAC(12, 6) = 0;

    JAC(12, 9) = 0;

    JAC(12, 11) = 0;

    JAC(13, 12) = 0;

    JAC(13, 14) = 0;

    JAC(13, 15) = 0;

    JAC(13, 16) = 0;

    JAC(13, 17) = 0;

    JAC(13, 13) = 1;

    JAC(13, 0) = 0;

    JAC(13, 1) = 0;

    JAC(13, 10) = 0;

    JAC(13, 2) = 0;

    JAC(13, 3) = 0;

    JAC(13, 4) = 0;

    JAC(13, 5) = 0;

    JAC(13, 7) = 0;

    JAC(13, 8) = 0;

    JAC(13, 6) = 0;

    JAC(13, 9) = 0;

    JAC(13, 11) = 0;

    JAC(0, 12) = 0;

    JAC(0, 14) = 0;

    JAC(0, 15) = 0;

    JAC(0, 16) = 0;

    JAC(0, 17) = 0;

    JAC(0, 13) = 0;

    JAC(0, 0) = 1;

    JAC(0, 1) = -1;

    JAC(0, 10) = 0;

    JAC(0, 2) = 0;

    JAC(0, 3) = 0;

    JAC(0, 4) = 0;

    JAC(0, 5) = 0;

    JAC(0, 7) = 0;

    JAC(0, 8) = 0;

    JAC(0, 6) = 0;

    JAC(0, 9) = 0;

    JAC(0, 11) = 0;

    JAC(10, 12) = 0;

    JAC(10, 14) = 0;

    JAC(10, 15) = 0;

    JAC(10, 16) = 0;

    JAC(10, 17) = 0;

    JAC(10, 13) = 0;

    JAC(10, 0) = 0;

    JAC(10, 1) = 0;

    JAC(10, 10) = 1;

    JAC(10, 2) = -1;

    JAC(10, 3) = 0;

    JAC(10, 4) = 0;

    JAC(10, 5) = 0;

    JAC(10, 7) = 0;

    JAC(10, 8) = 0;

    JAC(10, 6) = 0;

    JAC(10, 9) = 0;

    JAC(10, 11) = 0;

    JAC(14, 12) = 0 + 1 / 4000 + 1 / 4000;

    JAC(14, 14) = 1;

    JAC(14, 13) = 0 + 0 + 0;

    JAC(14, 15) = 0;

    JAC(14, 0) = 0 + 0 + 0;

    JAC(14, 16) = 0;

    JAC(14, 1) = 0 + 0 + 0;

    JAC(14, 16) = 0;

    JAC(14, 10) = 0 + 0 + 0;

    JAC(14, 17) = 0;

    JAC(14, 2) = 0 + 0 + 0;

    JAC(14, 17) = 0;

    JAC(14, 3) = 0 + (-1 / 4000) + 0;

    JAC(14, 4) = 0 + 0 + 0;

    JAC(14, 5) = 0 + 0 + 0;

    JAC(14, 7) = 0 + 0 + 0;

    JAC(14, 8) = 0 + 0 + 0;

    JAC(14, 6) = 0 + 0 + 0;

    JAC(14, 9) = 0 + 0 + (-1 / 4000);

    JAC(14, 11) = 0 + 0 + 0;

    JAC(15, 12) = 0 + 0 + 0;

    JAC(15, 14) = 0;

    JAC(15, 13) = 0 + 1 / 4000 + 1 / 4000;

    JAC(15, 15) = 1;

    JAC(15, 0) = 0 + 0 + 0;

    JAC(15, 16) = 0;

    JAC(15, 1) = 0 + 0 + 0;

    JAC(15, 16) = 0;

    JAC(15, 10) = 0 + 0 + 0;

    JAC(15, 17) = 0;

    JAC(15, 2) = 0 + 0 + 0;

    JAC(15, 17) = 0;

    JAC(15, 3) = 0 + 0 + 0;

    JAC(15, 4) = 0 + (-1 / 4000) + 0;

    JAC(15, 5) = 0 + 0 + 0;

    JAC(15, 7) = 0 + 0 + 0;

    JAC(15, 8) = 0 + 0 + 0;

    JAC(15, 6) = 0 + 0 + 0;

    JAC(15, 9) = 0 + 0 + 0;

    JAC(15, 11) = 0 + 0 + (-1 / 4000);

    JAC(16, 12) = 0 + 0 + 0 + 0;

    JAC(16, 14) = 0;

    JAC(16, 13) = 0 + 0 + 0 + 0;

    JAC(16, 15) = 0;

    JAC(16, 0) = 0 + 1 / 5000 + (-1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(1)))) + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1)))) - (1e-09 * -11594.2) * (exp(11594.2 * (X(4) - X(1)))) + (-1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(1)))) + (1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1)))) + (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1)))) - (1e-09 * -11594.2) * (exp(11594.2 * (X(5) - X(1))));

    JAC(16, 16) = 1;

    JAC(16, 1) = 0 + 0 + 0 + 0;

    JAC(16, 16) = 1;

    JAC(16, 10) = 0 + 0 + 0 + 0;

    JAC(16, 17) = 0;

    JAC(16, 2) = 0 + 0 + 0 + 0;

    JAC(16, 17) = 0;

    JAC(16, 3) = 0 + 0 + (-1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(4) - X(1)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(4) - X(1)))) + 0;

    JAC(16, 4) = 0 + 0 + 0 + (-1e-09 * -11594.2 / 1) * (1 + 1) * (exp(11594.2 * (X(5) - X(1)))) + (1e-09 * -11594.2) * (exp(11594.2 * (X(5) - X(1))));

    JAC(16, 5) = 0 + 0 + 0 + 0;

    JAC(16, 7) = 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(8) - X(1)))) - (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(8) - X(1)))) + 0;

    JAC(16, 8) = 0 + 0 + 0 + (1e-09 * -11594.2) * (exp(11594.2 * (X(9) - X(1)))) - (1e-09 * -11594.2 / 100) * (1 + 100) * (exp(11594.2 * (X(9) - X(1))));

    JAC(16, 6) = 0 + 0 + 0 + 0;

    JAC(16, 9) = 0 + 0 + 0 + 0;

    JAC(16, 11) = 0 + 0 + 0 + 0;

    JAC(16, 12) = 0 + 0;

    JAC(16, 14) = 0;

    JAC(16, 13) = 0 + 0;

    JAC(16, 15) = 0;

    JAC(16, 0) = 0 + 0;

    JAC(16, 16) = 1;

    JAC(16, 1) = 0 + 1 / 10000;

    JAC(16, 16) = 1;

    JAC(16, 10) = 0 + 0;

    JAC(16, 17) = 0;

    JAC(16, 2) = 0 + (-1 / 10000);

    JAC(16, 17) = 0;

    JAC(16, 3) = 0 + 0;

    JAC(16, 4) = 0 + 0;

    JAC(16, 5) = 0 + 0;

    JAC(16, 7) = 0 + 0;

    JAC(16, 8) = 0 + 0;

    JAC(16, 6) = 0 + 0;

    JAC(16, 9) = 0 + 0;

    JAC(16, 11) = 0 + 0;

    JAC(17, 12) = 0 + 0;

    JAC(17, 14) = 0;

    JAC(17, 13) = 0 + 0;

    JAC(17, 15) = 0;

    JAC(17, 0) = 0 + 0;

    JAC(17, 16) = 0;

    JAC(17, 1) = 0 + 0;

    JAC(17, 16) = 0;

    JAC(17, 10) = 0 + 1 / 30000;

    JAC(17, 17) = 1;

    JAC(17, 2) = 0 + 0;

    JAC(17, 17) = 1;

    JAC(17, 3) = 0 + 0;

    JAC(17, 4) = 0 + 0;

    JAC(17, 5) = 0 + 0;

    JAC(17, 7) = 0 + 0;

    JAC(17, 8) = 0 + 0;

    JAC(17, 6) = 0 + 0;

    JAC(17, 9) = 0 + 0;

    JAC(17, 11) = 0 + (-1 / 30000);

    JAC(17, 12) = 0 + 0 + 0;

    JAC(17, 14) = 0;

    JAC(17, 13) = 0 + 0 + 0;

    JAC(17, 15) = 0;

    JAC(17, 0) = 0 + 0 + 0;

    JAC(17, 16) = 0;

    JAC(17, 1) = 0 + (-1 / 10000) + 0;

    JAC(17, 16) = 0;

    JAC(17, 10) = 0 + 0 + 0;

    JAC(17, 17) = 1;

    JAC(17, 2) = 0 + 1 / 10000 + 1 / 30000;

    JAC(17, 17) = 1;

    JAC(17, 3) = 0 + 0 + 0;

    JAC(17, 4) = 0 + 0 + 0;

    JAC(17, 5) = 0 + 0 + 0;

    JAC(17, 7) = 0 + 0 + 0;

    JAC(17, 8) = 0 + 0 + 0;

    JAC(17, 6) = 0 + 0 + 0;

    JAC(17, 9) = 0 + 0 + (-1 / 30000);

    JAC(17, 11) = 0 + 0 + 0;
    return JAC;
}

// 牛顿-拉夫森迭代法求解方程组
void newtonRaphson(VectorXd& x) {
    const double epsilon = 1e-4;
    int maxIterations = 100;

    for (int i = 0; i < maxIterations; ++i) {
        VectorXd f = equations(x);
        MatrixXd J = jacobian(x);

        //std::cout << f << "\n" << J << std::endl;
        //Vector2d delta = J * f;
        VectorXd delta(N + 1);
        delta.setZero();
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                delta(i + 1) += J(i, j) * f(j);
            }
        }
        // std::cout << delta << std::endl;
     //    //Vector2d delta = J(xn).inverse() * F(xn);

        x += delta;

        if (delta.norm() < epsilon) {
            break;
        }
    }
}

int main() {

    Eigen::VectorXd X(N + 1);
    //Eigen::VectorXd X = { 0.000, 0.7103, 0.6725, 10.0000, 0.7103, 1.5000, 10.0000, -0.0046, -0.0021 }; 
    double arr[100] = { 1 }; //0下标不使用，从1开始
    for (int i = 1; i <= N - 1; i++) {
        X(i) = arr[i];
    }
    newtonRaphson(X);

    for (int i = 1; i <= N; i++) {
        std::cout << "x" << i << "=" << X(i) << std::endl;
    }

    return 0;
}

#endif